<?xml version="1.0" encoding="ISO-8859-1"?>

<PropertyList>

  <keyboard>

    <!-- ###### -->
    <key n="60">
      <name>&lt;</name>
      <desc>Previous Weapon</desc>
      <binding>
        <command>nasal</command>
        <script>
          <![CDATA[
            var mod = getprop("/sim/variant-id");
            var wep = getprop("controls/armament/weapon-type");
            if (wep == 2 ) {
              setprop("controls/armament/weapon-type", wep -1);
              if (mod == 1 ) {
              screen.log.write("YakB-12.7 machine gun selected", 0.5, 0.5, 1);
              } elsif (mod == 2 ) {
              screen.log.write("GSh-30-2K cannon selected", 0.5, 0.5, 1);
              }
            } elsif (wep == 3 ) {
              setprop("controls/armament/weapon-type", wep -1);
              screen.log.write("B8V20 rocket pods selected", 0.5, 0.5, 1);
            } elsif (wep >= 4 and wep <= 7) {
              setprop("controls/armament/weapon-type", wep -1);
              screen.log.write("9M120-ATAKA missiles selected", 0.5, 0.5, 1);
            }
          ]]>
        </script>
      </binding>
    </key>

    <key n="62">
      <name>&gt;</name>
      <desc>Next weapon</desc>
      <binding>
        <command>nasal</command>
        <script>
          <![CDATA[
            var mod = getprop("/sim/variant-id");
            var wep = getprop("controls/armament/weapon-type");
            if (wep == 0 ) {
              setprop("controls/armament/weapon-type", wep +1);
              if (mod == 1 ) {
              screen.log.write("YakB-12.7 machine gun selected", 0.5, 0.5, 1);
              } elsif (mod == 2 ) {
              screen.log.write("GSh-30-2K cannon selected", 0.5, 0.5, 1);
              }
            } elsif (wep == 1 ) {
              setprop("controls/armament/weapon-type", wep +1);
              screen.log.write("B8V20 rocket pods selected", 0.5, 0.5, 1);
            } elsif (wep >= 2 and wep <= 5) {
              setprop("controls/armament/weapon-type", wep +1);
              screen.log.write("9M120-ATAKA missile selected", 0.5, 0.5, 1);
            }
          ]]>
        </script>
      </binding>
    </key>

    <!-- <key n="101">
				<name>e</name>
				<desc>Fire selected weapons</desc>
				<binding>
					<command>property-assign</command>
					<property>controls/armament/trigger</property>
					<value>true</value>
				</binding>
			  <mod-up>
				  <binding>
					  <command>property-assign</command>
					  <property>controls/armament/trigger</property>
					  <value>false</value>
				  </binding>
			  </mod-up>
    </key> -->

    <key n="101">
      <name>e</name>
      <desc>Fire selected weapons</desc>
      <binding>
        <command>nasal</command>
        <script>guns.fire_MG()</script>
      </binding>
      <mod-up>
        <binding>
          <command>nasal</command>
          <script>guns.stop_MG()</script>
        </binding>
      </mod-up>
    </key>

    <key n="102">
      <name>f</name>
      <desc>Launch Flares</desc>
      <binding>
        <command>property-assign</command>
        <property>controls/armament/pickle</property>
        <value>true</value>
      </binding>
      <mod-up>
        <binding>
          <command>property-assign</command>
          <property>controls/armament/pickle</property>
          <value>false</value>
        </binding>
      </mod-up>
    </key>

    <key n="109">
      <name>m</name>
      <desc>Masterarm</desc>
      <binding>
        <command>nasal</command>
        <script>
          <![CDATA[
            setprop("controls/armament/master-arm",!getprop("controls/armament/master-arm"));
            screen.log.write("Master-arm "~(getprop("controls/armament/master-arm")==0?"OFF":"ON"), 0.5, 0.5, 1);
          ]]>
        </script>
      </binding>
    </key>

    <key n="113">
      <name>q</name>
      <desc>Ripple Mode Cycle</desc>
      <binding>
        <command>property-adjust</command>
        <property>/controls/armament/salvo-ripple</property>
        <step> 1 </step>
        <min>  0 </min>
        <max>  3 </max>
        <wrap>true</wrap>
      </binding>
      <binding>
        <command>nasal</command>
        <script>
          <![CDATA[
            var mod = getprop("/controls/armament/salvo-ripple");
            if (mod == 0 ) {
              screen.log.write("Ripple Mode: SALVO", 0.5, 0.5, 1);
              } elsif (mod == 1 ) {
              screen.log.write("Ripple Mode: SINGLE", 0.5, 0.5, 1);
              } elsif (mod == 2 ) {
              screen.log.write("Ripple Mode: PAIR", 0.5, 0.5, 1);
              }
          ]]>
        </script>
      </binding>
    </key>

    <!-- ###### -->

    <key n="68">
      <name>D</name>
      <desc>Passenger door</desc>
      <binding>
        <command>nasal</command>
        <script>doors.passenger.toggle();</script>
      </binding>
    </key>

    <key n="100">
      <name>d</name>
      <desc>Crew door</desc>
      <binding>
        <command>nasal</command>
        <script>doors.crew.toggle();</script>
      </binding>
    </key>

    <key n="82">
      <name>R</name>
      <desc>Toggle rotor brake</desc>
      <binding>
        <command>nasal</command>
        <script>
          var p = "/controls/rotor/brake";
          setprop(p, !getprop(p));
        </script>
      </binding>
    </key>

    <key n="114">
      <name>r</name>
      <desc>Apply rotor brake</desc>
      <binding>
        <command>nasal</command>
        <script>interpolate("/controls/rotor/brake", 1.0, 2)</script>
      </binding>
      <mod-up>
        <binding>
          <command>nasal</command>
          <script>interpolate("/controls/rotor/brake", 0.0, 2)</script>
        </binding>
      </mod-up>
    </key>

    <key n="125">
      <name>}</name>
      <desc>AutoStart/AutoStop</desc>
      <binding>
        <command>property-toggle</command>
        <property>controls/electric/battery-switch</property>
      </binding>
      <binding>
        <command>property-toggle</command>
        <property>controls/electric/engine/generator</property>
      </binding>
      <binding>
        <command>property-toggle</command>
        <property>controls/lighting/instrument-lights</property>
      </binding>
      <binding>
        <command>property-toggle</command>
        <property>controls/lighting/nav-lights</property>
      </binding>
      <binding>
        <command>property-toggle</command>
        <property>controls/lighting/beacon</property>
      </binding>
      <binding>
        <command>property-toggle</command>
        <property>controls/lighting/strobe</property>
      </binding>
      <binding>
        <command>property-toggle</command>
        <property>controls/switches/starterkey-insert</property>
      </binding>
      <binding>
        <command>property-toggle</command>
        <property>controls/engines/engine[0]/fuel-pump</property>
      </binding>
      <binding>
        <command>property-toggle</command>
        <property>controls/engines/engine[1]/fuel-pump</property>
      </binding>
      <binding>
        <command>property-toggle</command>
        <property>/controls/electric/ralt-switch</property>
      </binding>
      <binding>
        <condition>
          <property>controls/electric/battery-switch</property>
        </condition>
        <command>nasal</command>
        <script>mi24.engines(1)</script>
      </binding>
      <binding>
        <condition>
          <not><property>controls/electric/battery-switch</property></not>
        </condition>
        <command>nasal</command>
        <script>mi24.engines(0)</script>
      </binding>
    </key>

  </keyboard>

</PropertyList>
